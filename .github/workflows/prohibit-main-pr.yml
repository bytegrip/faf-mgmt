name: Check PR Base Branch

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - main

jobs:
  check-base-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR base is dev
        id: check-base
        run: |
          echo "PR target branch: ${{ github.base_ref }}"
          echo "PR source branch: ${{ github.head_ref }}"
          
          if [ "${{ github.head_ref }}" != "dev" ]; then
            echo "ERROR: Pull requests to main must come from the 'dev' branch"
            echo "Current source branch: ${{ github.head_ref }}"
            echo "Expected source branch: dev"
            echo "check_passed=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "SUCCESS: PR is correctly coming from 'dev' branch"
            echo "check_passed=true" >> $GITHUB_OUTPUT
          fi

      - name: Add comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Pull Request Base Branch Check Failed**
              
              This pull request is targeting the \`main\` branch but is coming from \`${{ github.head_ref }}\`.
              
              **Required:** All pull requests to \`main\` must come from the \`dev\` branch.
              
              **Please:**
              1. Close this PR
              2. Create a new PR from \`dev\` to \`main\`
              3. Or change the base branch of this PR to \`dev\` if appropriate
              
              ---
              *This check ensures our branching strategy is followed correctly.*`
            })

      - name: Set status check
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const checkPassed = '${{ steps.check-base.outputs.check_passed }}' === 'true';
            
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: checkPassed ? 'success' : 'failure',
              target_url: `${context.payload.repository.html_url}/actions/runs/${context.runId}`,
              description: checkPassed ? 
                'PR correctly comes from dev branch' : 
                'PR must come from dev branch',
              context: 'branch-policy/base-branch-check'
            })
